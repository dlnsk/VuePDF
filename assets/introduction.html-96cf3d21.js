import{_ as u,r as e,o as r,c as d,a,w as t,b as n,d as s,e as p}from"./app-ccd96eb7.js";const k={},m=n("h1",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),s(" Introduction")],-1),v=n("p",null,[s("VuePDF is a "),n("strong",null,"Vue 3"),s(" client-side component for pdf.js that allows you to flexibly display PDF pages within your project.")],-1),g=n("h2",{id:"installation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),s(" Installation")],-1),h=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(` i @tato30/vue-pdf
`)])])],-1),b=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(` @tato30/vue-pdf
`)])])],-1),f=p(`<h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic Usage</h2><p>The most basic usage is so simple as import the <code>VuePDF</code> component and <code>usePDF</code> composable and display on <code>&lt;template&gt;</code> ðŸ˜ƒ</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> VuePDF<span class="token punctuation">,</span> usePDF <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tato30/vue-pdf&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> pdf <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token string">&#39;sample.pdf&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VuePDF</span> <span class="token attr-name">:pdf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pdf<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="working-with-layers" tabindex="-1"><a class="header-anchor" href="#working-with-layers" aria-hidden="true">#</a> Working With Layers</h2><h3 id="text-and-annotations" tabindex="-1"><a class="header-anchor" href="#text-and-annotations" aria-hidden="true">#</a> Text and Annotations</h3><p>This component supports text-selection and annotation-interaction by enabling them with <code>text-layer</code> and <code>annotation-layer</code> props respectively, but for this layers renders correctly is necessary setting <code>css</code> styles, it can be done by importing default styles from <code>@tato30/vue-pdf/style.css</code>.</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> VuePDF<span class="token punctuation">,</span> usePDF <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tato30/vue-pdf&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;@tato30/vue-pdf/style.css&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> pdf <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token string">&#39;sample.pdf&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VuePDF</span> <span class="token attr-name">:pdf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pdf<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text-layer</span> <span class="token attr-name">annotation-layer</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Check the examples:</p>`,8),y=n("p",null,"You can also create your own custom styles and set them in your project, use this examples as guide:",-1),_={href:"https://github.com/mozilla/pdf.js/blob/master/web/text_layer_builder.css",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/mozilla/pdf.js/blob/master/web/annotation_layer_builder.css",target:"_blank",rel:"noopener noreferrer"},w=p(`<h3 id="xfa-forms" tabindex="-1"><a class="header-anchor" href="#xfa-forms" aria-hidden="true">#</a> XFA Forms</h3><p>XFA forms also can be supported by enabling them from <code>usePDF</code>.</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> VuePDF<span class="token punctuation">,</span> usePDF <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tato30/vue-pdf&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;@tato30/vue-pdf/style.css&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> pdf <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/example_xfa.pdf&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enableXfa</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VuePDF</span> <span class="token attr-name">:pdf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pdf<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Check the example:</p>`,4),F=p(`<h2 id="server-side-rendering" tabindex="-1"><a class="header-anchor" href="#server-side-rendering" aria-hidden="true">#</a> Server-Side Rendering</h2><p><code>VuePDF</code> is a client-side library, so if you are working with SSR frameworks like <code>nuxt</code>, surely will throw error during building stage, if that the case, you could wrap library in some &quot;client only&quot; directive or component, also <code>usePDF</code> should be wrapped.</p><h2 id="contributing" tabindex="-1"><a class="header-anchor" href="#contributing" aria-hidden="true">#</a> Contributing</h2><p>Any idea, suggestion or contribution to the code or documentation are very welcome.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Clone the repository</span>
<span class="token function">git</span> clone https://github.com/TaTo30/VuePDF.git

<span class="token comment"># Change to code folder</span>
<span class="token builtin class-name">cd</span> VuePDF

<span class="token comment"># Install node_modules</span>
<span class="token function">npm</span> <span class="token function">install</span>

<span class="token comment"># Run code with hot reload</span>
<span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function P(D,V){const l=e("CodeGroupItem"),i=e("CodeGroup"),o=e("RouterLink"),c=e("ExternalLinkIcon");return r(),d("div",null,[m,v,g,a(i,null,{default:t(()=>[a(l,{title:"NPM"},{default:t(()=>[h]),_:1}),a(l,{title:"YARN"},{default:t(()=>[b]),_:1})]),_:1}),f,n("ul",null,[n("li",null,[a(o,{to:"/examples/basic/text_layer.html"},{default:t(()=>[s("Text Layer")]),_:1})]),n("li",null,[a(o,{to:"/examples/basic/annotation_layer.md.html"},{default:t(()=>[s("Annotation Layer")]),_:1})])]),y,n("ul",null,[n("li",null,[n("a",_,[s("text-layer styles"),a(c)])]),n("li",null,[n("a",x,[s("annotation-layer styles"),a(c)])])]),w,n("ul",null,[n("li",null,[a(o,{to:"/examples/basic/xfa_layer.html"},{default:t(()=>[s("XFA Forms")]),_:1})])]),F])}const C=u(k,[["render",P],["__file","introduction.html.vue"]]);export{C as default};

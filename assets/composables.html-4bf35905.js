import{_ as c,r as o,o as i,c as l,b as n,d as s,a,w as u,e}from"./app-ccd96eb7.js";const r={},d=e(`<h1 id="composables" tabindex="-1"><a class="header-anchor" href="#composables" aria-hidden="true">#</a> Composables</h1><h2 id="usepdf" tabindex="-1"><a class="header-anchor" href="#usepdf" aria-hidden="true">#</a> usePDF</h2><p>This package provides a default composable named <code>usePDF</code> that loads and prepare the PDF Document for it usage with <code>VuePDF</code> component, also let you get some basic information and properties about the document.</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> VuePDF<span class="token punctuation">,</span> usePDF <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tato30/vue-pdf&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> pdf<span class="token punctuation">,</span> pages<span class="token punctuation">,</span> info <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token string">&#39;sample.pdf&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VuePDF</span> <span class="token attr-name">:pdf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pdf<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h3><h4 id="src" tabindex="-1"><a class="header-anchor" href="#src" aria-hidden="true">#</a> src</h4><p>Type: <code>string | URL | TypedArray | DocumentInitParameters</code> <br> Required: <code>True</code></p>`,7),k=n("code",null,"src",-1),m={href:"https://github.com/mozilla/pdf.js/blob/38287d943532eee939ceffbe6861163f93805ca7/src/display/api.js#L145",target:"_blank",rel:"noopener noreferrer"},v=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> pdf<span class="token punctuation">,</span> pages<span class="token punctuation">,</span> info <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token string">&#39;sample.pdf&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h4><p>Type: <code>object</code></p><p>An object with the following properties:</p><ul><li><code>onPassword</code>: Callback function to request the document password if no password (or wrong password) was provided.</li><li><code>onProgress</code>: Callback function to enable progress monitor.</li><li><code>onError</code>: function to handle pdf loading errors</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onPassword</span><span class="token punctuation">(</span><span class="token parameter">updatePassword<span class="token punctuation">,</span> reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Reason for callback: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token function">updatePassword</span><span class="token punctuation">(</span><span class="token string">&#39;password1234&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">onProgress</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> loaded<span class="token punctuation">,</span> total <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>loaded <span class="token operator">/</span> total <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">% Loaded</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">PDF loading error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> pdf<span class="token punctuation">,</span> pages<span class="token punctuation">,</span> info <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token string">&#39;sample.pdf&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  onPassword<span class="token punctuation">,</span>
  onProgress<span class="token punctuation">,</span>
  onError
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h3>`,7),h=n("a",{href:"#usepdf-composable"},[n("code",null,"usePDF")],-1),b={href:"https://vuejs.org/api/reactivity-advanced.html#shallowref",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"shallowRef",-1),f=n("h4",{id:"pdf",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pdf","aria-hidden":"true"},"#"),s(" pdf")],-1),_=n("p",null,[s("Type: "),n("code",null,"PDFDocumentLoadingTask")],-1),D={href:"https://mozilla.github.io/pdf.js/api/draft/module-pdfjsLib-PDFDocumentLoadingTask.html",target:"_blank",rel:"noopener noreferrer"},P=e(`<h4 id="pages" tabindex="-1"><a class="header-anchor" href="#pages" aria-hidden="true">#</a> pages</h4><p>Type: <code>int</code></p><p>Document number pages.</p><h4 id="info" tabindex="-1"><a class="header-anchor" href="#info" aria-hidden="true">#</a> info</h4><p>Type: <code>object</code></p><p>Document information object.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;metadata&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>...<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// Metadata object</span>
  <span class="token property">&quot;attachments&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>...<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// File attachments object</span>
  <span class="token property">&quot;javascript&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>...<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Array of embedded scripts</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="document-api" tabindex="-1"><a class="header-anchor" href="#document-api" aria-hidden="true">#</a> Document API</h3>`,8),y={href:"https://mozilla.github.io/pdf.js/api/draft/module-pdfjsLib-PDFDocumentProxy.html",target:"_blank",rel:"noopener noreferrer"},w=n("a",{href:"#pdf"},"pdf's",-1),j=n("code",null,"annotationStorage",-1),F=n("code",null,"saveDocument",-1),x=n("code",null,"cleanup",-1),T=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> pdf <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePDF</span><span class="token punctuation">(</span><span class="token string">&#39;document.pdf&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  pdf<span class="token punctuation">.</span>value<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// doc.annotationsStorage</span>
    <span class="token comment">// doc.saveDocument()</span>
    <span class="token comment">// doc.cleanup()</span>
    <span class="token comment">// doc.getData()</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="custom" tabindex="-1"><a class="header-anchor" href="#custom" aria-hidden="true">#</a> Custom</h2>`,2),q=n("code",null,"usePDF",-1),L=n("code",null,"pdf",-1),V=n("code",null,"shallowRef | ref",-1),A={href:"https://mozilla.github.io/pdf.js/api/draft/module-pdfjsLib-PDFDocumentLoadingTask.html",target:"_blank",rel:"noopener noreferrer"},R=e(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">PDFJS</span> <span class="token keyword">from</span> <span class="token string">&#39;pdfjs-dist&#39;</span>

<span class="token keyword">const</span> pdf <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">loadPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> loadingTask <span class="token operator">=</span> <span class="token constant">PDFJS</span><span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token string">&#39;https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf&#39;</span><span class="token punctuation">)</span>
  pdf<span class="token punctuation">.</span>value <span class="token operator">=</span> loadingTask
<span class="token punctuation">}</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">loadPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VuePDF</span> <span class="token attr-name">:pdf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pdf<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function C(E,I){const t=o("ExternalLinkIcon"),p=o("RouterLink");return i(),l("div",null,[d,n("p",null,[s("This parameter is the same "),k,s(" of "),n("a",m,[s("pdf.js"),a(t)])]),v,n("blockquote",null,[n("p",null,[s("All values returned by "),h,s(" are "),n("a",b,[g,a(t)]),s(" objects.")])]),f,_,n("p",null,[s("Document loading task, see "),n("a",D,[s("PDFDocumentLoadingTask"),a(t)]),s(" for more details.")]),P,n("p",null,[s("You can access to "),n("a",y,[s("PDFDocumentProxy"),a(t)]),s(" through "),w,s(" promise property and use its API methods to get more document's info like "),j,s(" or use functions like "),F,s(", "),x,s(", etc.")]),T,n("p",null,[s("Using "),q,s(" it's not required, you can use the pdf.js API in the component or build your own composable by yourself. Just need to ensure send on "),a(p,{to:"/guide/props.html#pdf"},{default:u(()=>[L]),_:1}),s(" prop a "),V,s(),n("a",A,[s("PDFDocumentLoadingTask"),a(t)]),s(" object.")]),R])}const z=c(r,[["render",C],["__file","composables.html.vue"]]);export{z as default};
